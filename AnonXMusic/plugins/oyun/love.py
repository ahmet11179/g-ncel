from pyrogram import filters
import random
from AnonXMusic import app  # app burada Pyrogram Client olmalÄ±

def get_random_message(love_percentage):
    if love_percentage <= 30:
        return random.choice([
            "AÅŸk havada ama biraz kÄ±vÄ±lcÄ±m lazÄ±m.",
            "Ä°yi bir baÅŸlangÄ±Ã§ ama geliÅŸmeye aÃ§Ä±k.",
            "GÃ¼zel bir ÅŸeyin baÅŸlangÄ±cÄ±."
        ])
    elif love_percentage <= 70:
        return random.choice([
            "GÃ¼Ã§lÃ¼ bir baÄŸ var. Beslemeye devam et.",
            "Ä°yi bir ÅŸansÄ±n var. Ãœzerinde Ã§alÄ±ÅŸ.",
            "AÅŸk filizleniyor, devam et."
        ])
    else:
        return random.choice([
            "Vay be! Cennet gibi bir uyum!",
            "MÃ¼kemmel eÅŸleÅŸme! Bu baÄŸÄ± koru.",
            "Birlikte olmaya yazgÄ±lÄ±sÄ±nÄ±z. Tebrikler!"
        ])

@app.on_message(filters.command("love", prefixes="/"))
async def love_command(client, message):
    if message.chat.type in ["group", "supergroup"]:
        members = []
        async for member in client.iter_chat_members(message.chat.id):
            # Mention alÄ±n (kullanÄ±cÄ± adÄ± varsa @username yoksa ismi)
            user = member.user
            if user.username:
                mention = f"@{user.username}"
            else:
                mention = user.mention  # KullanÄ±cÄ±nÄ±n ismine gÃ¶re mention

            members.append(mention)

        if len(members) < 2:
            await message.reply_text("Grup iÃ§inde yeterli Ã¼ye yok.")
            return
        
        user1, user2 = random.sample(members, 2)
        love_percentage = random.randint(10, 100)
        love_message = get_random_message(love_percentage)
        
        response = f"{user1} ðŸ’• + {user2} ðŸ’• = {love_percentage}%\n\n{love_message}"
        await message.reply_text(response)
    else:
        await message.reply_text("Bu komut sadece gruplarda kullanÄ±labilir.")
